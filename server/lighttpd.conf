# Lighttpd Configuration File
# /etc/lighttpd/lighttpd.conf

# modules to load
server.modules = ( 
	"mod_access",
#	"mod_auth", 
	"mod_expire",
	"mod_status", 
	"mod_fastcgi",
	"mod_compress",
	"mod_setenv",
	"mod_rewrite", 
	"mod_redirect", 
#	"mod_alias",
#	"mod_cgi",
#	"mod_ssi",
	"mod_proxy",
#	accesslog modules
	#"mod_accesslog",
	#"mod_extforward",
)

# to help the rc.scripts
server.pid-file = "/var/run/lighttpd.pid"

# change uid to <uid> (default: don't care)
server.username = "www-data"

# change uid to <uid> (default: don't care)
server.groupname = "www-data"

# a static document-root
server.document-root = "/var/www/default"

# files to check for if .../ is requested
server.indexfiles = ( "index.html" )

# where to send error-messages to
server.errorlog = "/var/log/lighttpd/error.log"

# SSL
$SERVER["socket"] == ":443" {
	ssl.engine  = "enable"
	ssl.use-sslv2 = "disable"
	ssl.use-sslv3 = "disable"
	ssl.pemfile = "/etc/lighttpd/ssl-key.pem"
}

# accesslog module configuration
#include "include_access_log.conf"

# mimetype mapping
include "include_mimetype.conf"

# deny access the file-extensions
url.access-deny = ( "~", ".inc" )

# controlling the expiration of content in caches (mod_expire)
etag.use-inode    = "enable"
etag.use-mtime    = "enable"
etag.use-size     = "enable"
static-file.etags = "enable"
$HTTP["url"] =~ "\.(jpg|gif|png|css|js|ico)$" {
	expire.url = ( "" => "access 2 months" )
}

# compress module (mod_compress)
compress.cache-dir = "/var/cache/lighttpd/compress/"
compress.filetype = (
	"text/plain",
	"text/css",
	"text/xml",
	"text/javascript"
)

# status module
$HTTP["remoteip"] == "127.0.0.1" {
	status.status-url = "/server-status"
	status.config-url = "/server-config" 
}


##
# Live Tracking Back End
##

# HTTP to HTTPS redirect
$HTTP["scheme"] == "http" {
	$HTTP["host"] =~ "your-domain.local" {
		url.redirect = (".*" => "https://%0$0")
	}
}
# HTTPS only!
$HTTP["scheme"] == "https" {
	$HTTP["host"] =~ "your-domain.local" {
		server.document-root = "/var/www/app/livetracking/public"
		# InfluxDB has an automatic CORS header
		#setenv.add-response-header  = ( 
		#	"Access-Control-Allow-Origin"  => "*",
		#	"Access-Control-Allow-Headers" => "X-Requested-With, Content-Type, Accept, Origin, Authorization",
		#	"Access-Control-Allow-Methods" => "GET, POST, PUT, DELETE"
		#)
		
		# /write
		# /query
		$HTTP["url"] =~ "^/(write|query)" {
			proxy.server = (
				"" => ( (
					# InfluxDB
					"host" => "127.0.0.1",
					"port" => 8086
				) )
			)
		}
		url.rewrite-once = (
			# /auth
			"^/auth$" => "/index.php/auth",
			# /ping
			"^/ping$" => "/index.php/ping",
			# /time
			"^/time$" => "/index.php/time",
			# /register
			"^/register$" => "/index.php/register",
			# /user[/{username}]
			# /user/change-password
			"^/user" => "/index.php/$0",
			# /users
			"^/users" => "/index.php/$0",
		)
		
		# fastcgi module
		fastcgi.server = ( ".php" =>
			( "localhost" => 
				( 
					"socket"       => "/tmp/php-fastcgi-livetracking-backend.socket",
					"bin-path"     => "/usr/bin/php-cgi",
					"min-procs"    => 1,
					"max-procs"    => 5,
					"idle-timeout" => 20,
				)
			)
		)
		
		# 404
		server.error-handler-404 = "/error404.php"
	}
}
